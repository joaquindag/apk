{"version":3,"sources":["./src/app/inicio-sesion/inicio-sesion.page.scss","./src/app/inicio-sesion/inicio-sesion.service.ts","./src/app/inicio-sesion/inicio-sesion-routing.module.ts","./src/app/inicio-sesion/inicio-sesion.page.html","./src/app/inicio-sesion/inicio-sesion.module.ts","./src/app/inicio-sesion/inicio-sesion.page.ts"],"names":[],"mappings":"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","file":"inicio-sesion-inicio-sesion-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmljaW8tc2VzaW9uLnBhZ2Uuc2NzcyJ9 */\";","import { MyFormGroup } from './../validators/myformgroup';\nimport { Injectable } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MyFormControl } from '../validators/myFormControl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InicioSesionService {\n  gerFormGroup(): any {\n   return this.myFormGroup.formGroup;\n  }\n  private _myFormGroup: MyFormGroup;\n  private nombreCampos=[\"nick\",\"contrasena\"];\n  public nombreControles = ['nick','contrasena'];\n  private controles = [\n    new MyFormControl('', Validators.compose([Validators.required,Validators.pattern('[\\\\d\\\\w@ñ\\\\.]*')])),\n    new MyFormControl('', Validators.compose([Validators.required,Validators.pattern('(?=\\\\w*\\\\d)(?=\\\\w*[a-z])(?=\\\\w*[A-Z])\\\\S{6}')])),\n  ];\n\n  constructor() {\n    this._myFormGroup = new MyFormGroup(this.nombreCampos,this.nombreControles,this.controles);\n    this.myFormGroup.insertarValidationMessages('nick',['pattern'],['Nick no valido']);\n    this.myFormGroup.insertarValidationMessages('contrasena',['pattern'],['contraseña de al menos 6 caracteres con al menos un numero una mayuscula y minusculas']);\n  }\n\n  /**\n   * Getter myFormGroup\n   * @return {MyFormGroup}\n   */\n  public get myFormGroup(): MyFormGroup {\n    return this._myFormGroup;\n  }\n\n  validateControl(element): boolean {\n    return (\n      this.myFormGroup.getControl(element).dirty &&\n      !this.myFormGroup.getControl(element).valid)\n  }\n\n  getErrorMessage(control) {\n    let algo=this.myFormGroup.getControl(control)\n    //console.log(\"sucio \"+algo.dirty);    \n    let errores= algo.errors;\n    return algo.getValidationMessage(Object.keys(errores)[0]);\n  }\n\n  validateAllControl():boolean{\n    let bandera=true;\n    for (let index = 0; index < this.nombreControles.length; index++) {\n      if(!this.myFormGroup.getControl(this.nombreCampos[index]).valid){\n        bandera=false;\n      }\n    }\n    return bandera;\n  }\n\n  sayTheField(campo){\n    let cadena=this.myFormGroup.getControl(campo).value;\n    return cadena;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InicioSesionPage } from './inicio-sesion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InicioSesionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InicioSesionPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    <ion-title>inicioSesion</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"controlForm\\\" *ngFor=\\\"let item of nombreControles\\\" >\\n    <ion-item>\\n    <ion-label>{{item}}</ion-label>\\n      <ion-input [formControlName]=item></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"inicioSesionService.validateControl(item)\\\">\\n      <ion-label>\\n        {{inicioSesionService.getErrorMessage(item)}}\\n      </ion-label>       \\n    </ion-item>\\n  </form>\\n\\n  \\n\\n  <ion-item *ngIf=\\\"inicioSesionService.validateAllControl()\\\">\\n<ion-button (click)=\\\"getLogin()\\\">Verificar Datos</ion-button>\\n    <div *ngIf=\\\"bandera\\\">\\n      <ion-button (click)=\\\"pageNavigator('pagina-principal')\\\" (click)=\\\"guardarNick()\\\">Enviar</ion-button>\\n    </div>\\n    <ion-item *ngIf=\\\"incorrecto\\\">El usuario o pass es incorrecto</ion-item>\\n   </ion-item>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InicioSesionPageRoutingModule } from './inicio-sesion-routing.module';\nimport { InicioSesionPage } from './inicio-sesion.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    InicioSesionPageRoutingModule\n  ],\n  declarations: [InicioSesionPage]\n})\nexport class InicioSesionPageModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { DatosService } from '../datos.service';\nimport { BbddService } from '../share/bbdd.service';\nimport { MyFormGroup } from '../validators/myformgroup';\nimport { InicioSesionService } from './inicio-sesion.service';\n\n@Component({\n  selector: 'app-inicio-sesion',\n  templateUrl: './inicio-sesion.page.html',\n  styleUrls: ['./inicio-sesion.page.scss'],\n})\nexport class InicioSesionPage {\n  algo;\n  public controlForm: MyFormGroup;\n  public nombreControles;\n  public verOk = 0;\n  public bandera = false;\n  public incorrecto=false;\n  constructor(public inicioSesionService: InicioSesionService,\n    private route: Router,\n    private rutaActiva: ActivatedRoute,\n    private bbdd: BbddService,\n    private datos:DatosService) {\n\n    this.controlForm = inicioSesionService.gerFormGroup();\n    this.nombreControles = inicioSesionService.nombreControles;\n  }\n\n  pageNavigator(nombre: String) {\n    let extraNavegacion: NavigationExtras = {\n      state: {\n        name: this.inicioSesionService.sayTheField(\"nick\")\n      }\n    }\n    this.route.navigate([nombre], extraNavegacion);\n  }\n\n  getLogin() {\n\n\n    let nick = this.inicioSesionService.sayTheField(\"nick\");\n    let pass = this.inicioSesionService.sayTheField(\"contrasena\")\n\n    this.bbdd.getLogin(nick, pass).then((data) => {\n      console.log(data);\n      if(data[0].logeo===1){\n        this.bandera = true;\n        this.incorrecto=false;\n      } else{\n        this.incorrecto=true;\n      }\n    }).catch((e) => { alert(e) });\n    this.verOk = this.bbdd.getverLogin();\n    \n  }\n\n  guardarNick(){\n    this.datos.setNick(this.inicioSesionService.sayTheField(\"nick\"))\n  }\n}\n"],"sourceRoot":"webpack:///"}